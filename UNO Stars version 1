import processing.serial.*;

Serial myPort;


int shootingX = 100;
int shootingY = 200;
int shootingX2 = 900;
int shootingY2 = 300;
int shootstroke = 0;
int shootstroke2 = 0;

int s = 6; //small stars
int m = 8; //medium stars
int l = 10; //large stars

//set color
int r = 236;
int g = 246;
int b = 245;
int starGlow = 0;
int mystarGlow;

void setup() {
  size(1000, 600);
  background(48, 60, 71);
  String portName = "/dev/tty.usbmodemfa141";
  myPort = new Serial (this, portName, 9600);
  randomStars(160);

  //constellations
  fill(r, g, b, 80);
  ursaMajor(145, 200);
  ursaMinor(800, 190);

  //draw larger ellipses for glow 
  s = 20; //small stars
  m = 24; //medium stars
  l = 30; //large stars

 fill(r, g, b, 10);
 ursaMajor(145, 200);
ursaMinor(800, 190);


}

void draw() {
  s = 6; //small stars
  m = 8; //medium stars
  l = 10; //large stars

  
  
    testGlow();
  
 
 fill(r, g, b, 10);
 ursamajorGlow(145, 200);
 ursaminorGlow(800, 190);
 

  //surprise shooting star right
  stroke(236, 246, 245, shootstroke);
  strokeWeight(3);
  if (mouseX>=900 && mouseX<width && mouseY>=500 && mouseY<height) {
    point(shootingX, shootingY);
    shootingX = shootingX + 5;
    shootingY = shootingY + 2;
    shootstroke = shootstroke + 1;
  }  


  //surprise shooting star left
  stroke(236, 246, 245, shootstroke2);
  strokeWeight(3);
  if (mouseX>0 && mouseX<=100 && mouseY>=500 && mouseY<height) {
    point(shootingX2, shootingY2);
    shootingX2 = shootingX2 - 5;
    shootingY2 = shootingY2 + 2;
    shootstroke2 = shootstroke2 + 1;
  }
}


void testGlow(){
   fill(48, 60, 71);
  ursaMajor(145, 200);
  ursaMinor(800, 190); 
  
  fill(r, g, b, starGlow);
  ursaMajor(145, 200);
  ursaMinor(800, 190); 
}
void mousePressed(){
  
  fill(48, 60, 71);
  ursaMajor(145, 200);
  ursaMinor(800, 190); 
  
  fill(r, g, b, 80);
  ursaMajor(145, 200);
  ursaMinor(800, 190); 
  

}



void serialEvent (Serial myPort) {
  starGlow = myPort.read();
  println(starGlow);
}




void randomStars(int starNum) { //<>//
  stroke(236, 246, 245, 80);
  for (int a=0; a<=starNum; a++) {
    strokeWeight(random(3)); 
    point(random(width), random(height));
  }
}

void ursaMajor(int x, int y) {
  noStroke();
  //1
  ellipse(x, y, m, m);
  //2
  ellipse(x+85, y+30, m, m);
  //3
  ellipse(x+110, y+85, m, m);
  //4
  ellipse(x+160, y+155, s, s);
  //5
  ellipse(x+135, y+220, l, l);
  //6
  ellipse(x+225, y+280, l, l);
  //7
  ellipse(x+280, y+230, l, l);
}


void ursaMinor(int x, int y) {
  noStroke();
  //8
  ellipse(x-310, y-110, s, s);
  //9
  ellipse(x-210, y-145, s-1, s-1);
  //10
  ellipse(x-285, y-60, s, s);
  //11
  ellipse(x-200, y-90, m, m);
  //12
  ellipse(x-110, y-88, s, s);
  //13
  ellipse(x-40, y-50, s, s);

  //polaris (the brightest star in ursa minor)
  fill(r, g, b, starGlow);
  ellipse(x, y, m, m);
   fill(r, g, b, starGlow);
  // ellipse(x, y, l+10, l+10);
  // ellipse(x, y, l+30, l+30);
}

void ursamajorGlow(int x, int y) {
  noStroke();
  //1
  if (dist(mouseX, mouseY, x, y)< 20) {
    ellipse(x, y, m, m);
    // fill (r, g, b);
  }
  //2
  if (dist(mouseX, mouseY, x+85, y+30)< 20) {
    ellipse(x+85, y+30, m, m);
  }
  //3
  if (dist(mouseX, mouseY, x+110, y+85)< 20) {
    ellipse(x+110, y+85, m, m);
  }
  //4
  if (dist(mouseX, mouseY, x+160, y+155)< 20) {
    ellipse(x+160, y+155, s, s);
  }
  //5
  if (dist(mouseX, mouseY, x+135, y+220)< 20) {
    ellipse(x+135, y+220, l, l);
  }
  //6
  if (dist(mouseX, mouseY, x+225, y+280)< 20) {
    ellipse(x+225, y+280, l, l);
  }
  //7
  if (dist(mouseX, mouseY, x+280, y+230)< 20) {
    ellipse(x+280, y+230, l, l);
  }
}

void ursaminorGlow(int x, int y) {
  noStroke();
  //8
  if (dist(mouseX, mouseY, x-310, y-110)< 20) {
    ellipse(x-310, y-110, s, s);
  }
  //9
  if (dist(mouseX, mouseY, x-210, y-145)< 20) {
    ellipse(x-210, y-145, s-1, s-1);
  }
  //10
  if (dist(mouseX, mouseY, x-285, y-60)< 20) {
    ellipse(x-285, y-60, s, s);
  }
  //11
  if (dist(mouseX, mouseY, x-200, y-90)< 20) {
    ellipse(x-200, y-90, m, m);
  }
  //12
  if (dist(mouseX, mouseY, x-110, y-88)< 20) {
    ellipse(x-110, y-88, s, s);
  }
  //13
  if (dist(mouseX, mouseY, x-40, y-50)< 20) {
    ellipse(x-40, y-50, s, s);
  }
  //Polaris
  if (dist(mouseX, mouseY, x, y)< 20) {
    ellipse(x, y, m, m);
  }
}








